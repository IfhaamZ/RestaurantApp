/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.51.v20230217
 * Generated at: 2024-10-07 06:17:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class StaffNotifications_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"ko\">\n");
      out.write("  <head>\n");
      out.write("    <meta charset=\"UTF-8\" />\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n");
      out.write("    <title>Notifications</title>\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/StaffNotifications.css\" />\n");
      out.write("  </head>\n");
      out.write("  <body>\n");
      out.write("    <div class=\"container\">\n");
      out.write("      <!-- Sidebar -->\n");
      out.write("      <div class=\"sidebar\">\n");
      out.write("        <h1>Notifications</h1>\n");
      out.write("        <a href=\"StaffDashboard.jsp\">Dashboard</a>\n");
      out.write("        <a href=\"StaffAttendance.jsp\">Attendance</a>\n");
      out.write("        <a href=\"StaffSchedule.jsp\">Schedule</a>\n");
      out.write("        <a href=\"StaffTask.jsp\">Task</a>\n");
      out.write("        <a href=\"StaffNotifications.jsp\">Notifications</a>\n");
      out.write("      </div>\n");
      out.write("\n");
      out.write("      <!-- Main Content -->\n");
      out.write("      <div class=\"main-content\">\n");
      out.write("        <!-- Notifications Header -->\n");
      out.write("        <div class=\"notification-header\">\n");
      out.write("          <h2>Notification Center</h2>\n");
      out.write("          <select class=\"filter-dropdown\">\n");
      out.write("            <option value=\"all\">All Notifications</option>\n");
      out.write("            <option value=\"unread\">Unread</option>\n");
      out.write("            <option value=\"important\">Important</option>\n");
      out.write("          </select>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <!-- Notifications List -->\n");
      out.write("        <div class=\"notification-list\">\n");
      out.write("          <h3>Recent Notifications</h3>\n");
      out.write("          <div class=\"notification-item unread\">\n");
      out.write("            <p>New Company Policy Update</p>\n");
      out.write("            <span class=\"notification-date\">2024-10-01</span>\n");
      out.write("          </div>\n");
      out.write("          <div class=\"notification-item read\">\n");
      out.write("            <p>Team Meeting Scheduled</p>\n");
      out.write("            <span class=\"notification-date\">2024-09-28</span>\n");
      out.write("          </div>\n");
      out.write("          <div class=\"notification-item unread\">\n");
      out.write("            <p>Annual Company Workshop</p>\n");
      out.write("            <span class=\"notification-date\">2024-09-15</span>\n");
      out.write("          </div>\n");
      out.write("          <div class=\"notification-item read\">\n");
      out.write("            <p>New Benefits Package Announced</p>\n");
      out.write("            <span class=\"notification-date\">2024-08-30</span>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <!-- Notification Detail Section -->\n");
      out.write("        <div class=\"notification-detail\">\n");
      out.write("          <h3>Notification Details</h3>\n");
      out.write("          <p><strong>Title:</strong> New Company Policy Update</p>\n");
      out.write("          <p><strong>Date:</strong> 2024-10-01</p>\n");
      out.write("          <p>\n");
      out.write("            <strong>Message:</strong> A new company policy has been released.\n");
      out.write("            Please review the policy document available in the company portal\n");
      out.write("            for more details.\n");
      out.write("          </p>\n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("  </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
