/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.51.v20230217
 * Generated at: 2024-09-09 02:30:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import model.Event;

public final class SearchEventStaff_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("model.Event");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Staff Event Search</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/SearchEventStaff.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <h1>Search Events</h1>\r\n");
      out.write("        <div class=\"nav-links\">\r\n");
      out.write("            <a href=\"staffeventlist\" class=\"btn-back\">Go Back</a>\r\n");
      out.write("            <a href=\"eventnew\" class=\"btn-add\">Add New Event</a>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"search-container\">\r\n");
      out.write("            <form action=\"staffeventsearch\" method=\"get\" class=\"search-form\">\r\n");
      out.write("                <label for=\"type\">Type:</label>\r\n");
      out.write("                <input type=\"text\" id=\"type\" name=\"type\" placeholder=\"Enter event type\">\r\n");
      out.write("\r\n");
      out.write("                <label for=\"date\">Date:</label>\r\n");
      out.write("                <input type=\"date\" id=\"date\" name=\"date\">\r\n");
      out.write("\r\n");
      out.write("                <input type=\"submit\" value=\"Search\" class=\"btn-search\">\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"event-list\">\r\n");
      out.write("            ");

                List<Event> listEvents = (List<Event>) request.getAttribute("ListOfEvents");
                if (listEvents != null && !listEvents.isEmpty()) {
                    for (Event event : listEvents) {
            
      out.write("\r\n");
      out.write("                <div class=\"event-item\">\r\n");
      out.write("                    <div class=\"event-header\">\r\n");
      out.write("                        <h3>");
      out.print( event.getName() );
      out.write("</h3>\r\n");
      out.write("                        <p class=\"event-date\"><span class=\"date-display\">");
      out.print( event.getDate() );
      out.write("</span></p>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <p class=\"event-description\">");
      out.print( event.getDescription() );
      out.write("</p>\r\n");
      out.write("                    <div class=\"event-meta\">\r\n");
      out.write("                        <p class=\"event-type\"><span class=\"icon\">&#128197;</span> Type: ");
      out.print( event.getType() );
      out.write("</p>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    \r\n");
      out.write("                    <!-- Edit and Delete Buttons for Staff -->\r\n");
      out.write("                    <div class=\"staff-controls\">\r\n");
      out.write("                        <form action=\"eventedit\" method=\"get\" style=\"display:inline;\">\r\n");
      out.write("                            <input type=\"hidden\" name=\"eventId\" value=\"");
      out.print( event.getId() );
      out.write("\">\r\n");
      out.write("                            <button type=\"submit\" class=\"btn-edit\">Edit</button>\r\n");
      out.write("                        <form action=\"eventdelete\" method=\"post\" style=\"display:inline;\">\r\n");
      out.write("                            <input type=\"hidden\" name=\"eventId\" value=\"");
      out.print( event.getId() );
      out.write("\">\r\n");
      out.write("                            <button type=\"submit\" class=\"btn-delete\">Delete</button>\r\n");
      out.write("                        </form>\r\n");
      out.write("\r\n");
      out.write("                        </form>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            ");

                    }
                } else {
            
      out.write("\r\n");
      out.write("                <div class=\"no-results\">\r\n");
      out.write("                    <p>No events found matching your search criteria.</p>\r\n");
      out.write("                </div>\r\n");
      out.write("            ");

                }
            
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
