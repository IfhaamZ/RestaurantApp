/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.51.v20230217
 * Generated at: 2024-09-25 05:58:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import model.error;
import DAO.DBManager;
import java.util.List;

public final class staffDashboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("DAO.DBManager");
    _jspx_imports_classes.add("model.error");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Staff Dashboard</title>\r\n");
      out.write("    <style>\r\n");
      out.write("/* Basic reset and layout */\r\n");
      out.write("body {\r\n");
      out.write("    font-family: Arial, sans-serif;\r\n");
      out.write("    background-color: #f9f9f9;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    min-height: 100vh;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container {\r\n");
      out.write("    width: 90%;\r\n");
      out.write("    margin: 40px auto;\r\n");
      out.write("    background-color: #fff;\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("h1 {\r\n");
      out.write("    color: #333;\r\n");
      out.write("    font-size: 36px;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    margin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("h2 {\r\n");
      out.write("    color: #555;\r\n");
      out.write("    font-size: 24px;\r\n");
      out.write("    margin-bottom: 20px;\r\n");
      out.write("    text-align: left;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Table styles */\r\n");
      out.write("table {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    border-collapse: collapse;\r\n");
      out.write("    margin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("th, td {\r\n");
      out.write("    padding: 12px;\r\n");
      out.write("    text-align: left;\r\n");
      out.write("    border-bottom: 1px solid #ddd;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("th {\r\n");
      out.write("    background-color: #007bff;\r\n");
      out.write("    color: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("tr:hover {\r\n");
      out.write("    background-color: #f1f1f1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("td {\r\n");
      out.write("    color: #333;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Links */\r\n");
      out.write("a {\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    color: #007bff;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    transition: color 0.2s ease-in-out;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("a:hover {\r\n");
      out.write("    color: #0056b3;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Button container to center the button */\r\n");
      out.write(".button-container {\r\n");
      out.write("    width: 100%; /* Ensure full width */\r\n");
      out.write("    display: flex; /* Use flexbox to center content */\r\n");
      out.write("    justify-content: center; /* Center the button horizontally */\r\n");
      out.write("    margin-top: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* General Button Styling */\r\n");
      out.write(".btn {\r\n");
      out.write("    padding: 10px 20px;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    transition: background-color 0.3s ease, border-color 0.3s ease, transform 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Blue button (for the Back to Main Dashboard) */\r\n");
      out.write(".btn-blue {\r\n");
      out.write("    background-color: #007bff; /* Blue color */\r\n");
      out.write("    color: white;\r\n");
      out.write("    border: 1px solid #007bff;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn-blue:hover {\r\n");
      out.write("    background-color: #0056b3; /* Darker blue on hover */\r\n");
      out.write("    border-color: #0056b3;\r\n");
      out.write("    transform: translateY(-2px); /* Slight hover effect */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Green button (for the Edit buttons) */\r\n");
      out.write(".btn-green {\r\n");
      out.write("    background-color: #28a745; /* Green color */\r\n");
      out.write("    color: white;\r\n");
      out.write("    border: 1px solid #28a745;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn-green:hover {\r\n");
      out.write("    background-color: #218838; /* Darker green on hover */\r\n");
      out.write("    border-color: #1e7e34;\r\n");
      out.write("    transform: translateY(-2px); /* Slight hover effect */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Responsive Design */\r\n");
      out.write("@media (max-width: 768px) {\r\n");
      out.write("    .container {\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    th, td {\r\n");
      out.write("        padding: 8px;\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("    <h1>Staff Dashboard</h1>\r\n");
      out.write("\r\n");
      out.write("    <h2>View and Edit Error Reports</h2>\r\n");
      out.write("\r\n");
      out.write("    <table>\r\n");
      out.write("        <thead>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <th>ID</th>\r\n");
      out.write("            <th>Description</th>\r\n");
      out.write("            <th>Steps</th>\r\n");
      out.write("            <th>Category</th>\r\n");
      out.write("            <th>Severity</th>\r\n");
      out.write("            <th>Staff Comments</th>\r\n");
      out.write("            <th>Date Submitted</th>\r\n");
      out.write("            <th>Actions</th>\r\n");
      out.write("        </tr>\r\n");
      out.write("        </thead>\r\n");
      out.write("        <tbody>\r\n");
      out.write("        ");

            DBManager dbManager = new DBManager();
            List<error> errorReports = dbManager.getAllErrorReports();  // Use the 'error' class

            for (error err : errorReports) {
        
      out.write("\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td>");
      out.print( err.getId() );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( err.getDescription() );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( err.getSteps() );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( err.getCategory() );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( err.getSeverity() );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( err.getStaffComments() != null ? err.getStaffComments() : "No comments yet" );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( err.getCreatedAt() != null ? err.getCreatedAt() : "N/A" );
      out.write("</td> <!-- Display Created At -->\r\n");
      out.write("            <td><a href=\"editError.jsp?id=");
      out.print( err.getId() );
      out.write("\" class=\"btn btn-green\">Edit</a></td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        ");

            }
        
      out.write("\r\n");
      out.write("        </tbody>\r\n");
      out.write("    </table>\r\n");
      out.write("    <div class=\"button-container\">\r\n");
      out.write("        <button class=\"btn btn-blue\" onclick=\"window.location.href='/mainStaffDashboard'\">Back to Main Dashboard</button>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
